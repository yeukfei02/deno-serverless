service: deno-serverless

frameworkVersion: "2"
useDotenv: true

provider:
  name: aws
  runtime: provided
  stage: prod
  region: ap-southeast-1
  apiName: deno-serverless-prod
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [playersTable, Arn]
  apiGateway:
    shouldStartNameWithService: true
    description: deno serverless prod
  lambdaHashingVersion: 20201221

package:
  exclude:
    - .deno_dir/gen/file
    - node_modules
    - package-lock.json
    - yarn.lock

functions:
  main:
    handler: src/main/handler.main
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    events:
      - http:
          path: /api
          method: get

  createPlayer:
    handler: src/createPlayer/handler.createPlayer
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    events:
      - http:
          path: /api/player
          method: post

  getPlayers:
    handler: src/getPlayers/handler.getPlayers
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    events:
      - http:
          path: /api/player
          method: get

  getPlayerById:
    handler: src/getPlayerById/handler.getPlayerById
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    events:
      - http:
          path: /api/player/{id}
          method: get

  updatePlayerById:
    handler: src/updatePlayerById/handler.updatePlayerById
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    events:
      - http:
          path: /api/player/{id}
          method: patch

  deletePlayerById:
    handler: src/deletePlayerById/handler.deletePlayerById
    layers:
      - !GetAtt Deno.Outputs.LayerArn
    events:
      - http:
          path: /api/player/{id}
          method: delete

resources:
  Transform: AWS::Serverless-2016-10-31
  Resources:
    Deno:
      Type: AWS::Serverless::Application
      Properties:
        Location:
          ApplicationId: arn:aws:serverlessrepo:us-east-1:390065572566:applications/deno
          SemanticVersion: 1.4.6

    playersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Players
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-prune-plugin
  - serverless-plugin-split-stacks
  - serverless-scriptable-plugin

custom:
  scriptHooks:
    before:package:createDeploymentArtifacts: DENO_DIR=.deno_dir deno cache src/**/*.ts && cp -R .deno_dir/gen/file/$PWD/ .deno_dir/LAMBDA_TASK_ROOT
  prune:
    automatic: true
    number: 3
